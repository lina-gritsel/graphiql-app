{
  "welcome": "Добро пожаловать!",
  "acquaintance": "Давайте знакомиться ➪",
  "singUp": "Зарегистрироваться",
  "logIn": "Войти",
  "or": "или",
  "about": "О нас",
  "aboutUs": "Мы, Алина, Артур и Ангелина, команда перспективных разработчиков.",
  "aboutFrontend": "Front-End Developer - это тот, кто создает веб-сайты и веб-приложения. Разница между Front-End и Back-End заключается в том, что Front-End относится к тому, как выглядит веб-страница, в то время как back-end относится к тому, как она работает. Вы можете рассматривать Front-End как клиентскую часть, а Back-End - как серверную. Базовыми языками для интерфейсной разработки являются HTML, CSS и JavaScript.",
  "project": "Наш проект",
  "aboutProjectFirstPart": "Наш проект - это аналог",
  "aboutProjectTwoPart": "GraphQL - это игровая площадка / IDE для запросов GraphQL. GraphQL - это язык запросов для Pigs и среда выполнения для выполнения этих запросов с вашими существующими данными. GraphQL предоставляет полное и понятное описание данных в вашем API, предоставляет клиентам способность просить именно то, что им нужно, и ничего больше, делает это облегчает разработку API с течением времени и позволяет мощному разработчику инструменты.",
  "aboutProjectLastPart": "Приложение GraphQL написано на языке программирования TypeScript, с использованием React и такого инструмента для управления данными состояние и пользовательским интерфейсом как Redux. Кроме того, при создании были использованы различные библиотеки, например,  Chakra для различных компоненты, i18next для перевода приложения на популярные языки, sass и многие другие.",
  "course": "Курс",
  "aboutCourseFirstPart": "Проект был разработан в рамках курса от",
  "aboutCourseLastPart": "RS School - это бесплатная образовательная программа, проводимая сообществом разработчиков Rolling Scopes с 2013 года.",
  "docs": "Документация",
  "schema": "Схема GraphQL предоставляет корневой тип для каждого вида операций",
  "goToMain": "Перейти в GraphQL редактор"
}
